#Виртуальное окружение.
    #Открыть терминал и вписать - python -m venv .folder

# Чтобы узнать тип данных переменной которой хотим увидеть, используем функцию type(переменная). 
# Например:
a = 123 
print(a)
print(type(a))

#Можно объявить "пустую" переменную. Например: a = None/.




#Интерполяция
#Пример:
#	print('{} - {} - {}'.format(a, b, s))
	
#	или
#
#	print(f'{} - {} - {}')





#Коллекции (массивы)
#Пример:

#	list = [1, 2, 3, 4] (можно миксовать типы данных в коллекции)











#Ввод и вывод данных

#print - выводит данные
#input - ввод данных

#Пример:
print('Введите a')
a = int(input()) # ставим "int" чтобы явно указать какой тип данных мы ждем от пользователя
print('Введите b')
b = int(input())
print(a, ' + ', b, ' = ', a + b)


#int - целые числа
#float - вещественные числа
#bool - логические выражения

# / - деление вещественные чисел

# // - деление целых чисел

# % - остаток

# ** - степень

# метод round(число, до скольки чисел после запятой округлить) - округляет вещественное число до указанных значений










#Логические операции

#AND
#пример:
#	1 < 2 and 2 > 3   => fals (and означает, что два условия должны быть истинными)

#OR
#Пример:
#	1 < 2 or 2 > 4    => true (or означает, что хотя бы одно условие будет истинным)


#NOT и IN
#Пример: 	
#	f = [1, 2, 3, 4]
#	print(f)
#	print(2 in f)    =====> true (число 2 есть в массиве f)



#	f = [1, 2, 3, 4]
#	print(f)
#	print(not 2 in f)    =====> fals (так как число 2 есть в массиве f)



#colors = {'red', 'green', 'blue'}
#colors.append('gray') - добавляет в конец коллекции новое значение.
#colors.remove('red') - удаляет указанное значение из коллекции.
#del.colors[0] - удаляет значение из коллекции по индексу.






#Функции
#Пример:
def f(x):
	if x == 1:
		return 'Целое'
	elif x == 2.3:
		return 23
	else:
		return

arg = 2
print(f(arg))
print(type(f(arg)))